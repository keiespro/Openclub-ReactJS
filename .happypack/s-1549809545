'use strict';

var PATHS = require('./paths');
var rules = require('./rules');
var plugins = require('./plugins');
var externals = require('./externals');
var resolve = require('./resolve');

module.exports = function () {
  var env = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  var isProduction = process.env.NODE_ENV === 'production';
  var isBrowser = env === 'browser';
  console.log('Running webpack in ' + process.env.NODE_ENV + ' mode on ' + (isBrowser ? 'browser' : 'server'));
  var node = { __dirname: true, __filename: true };
  var vendor = ['react', 'react-dom', 'redux', 'react-redux', 'react-router', 'react-router-redux'];

  var prodServerRender = {
    devtool: 'source-map',
    context: PATHS.src,
    entry: { server: '../server/main' },
    target: 'node',
    node: node,
    externals: externals,
    output: {
      path: PATHS.dist,
      filename: '[name].js',
      publicPath: PATHS.public,
      libraryTarget: 'commonjs2'
    },
    module: { rules: rules({ production: true, browser: false }) },
    resolve: resolve,
    plugins: plugins({ production: true, browser: false })
  };

  var prodBrowserRender = {
    devtool: 'cheap-module-source-map',
    context: PATHS.src,
    entry: {
      app: ['./main.jsx'],
      vendor: vendor
    },
    node: node,
    output: {
      path: PATHS.assets,
      filename: '[hash].[name].js',
      publicPath: PATHS.public
    },
    module: { rules: rules({ production: true, browser: true }) },
    resolve: resolve,
    plugins: plugins({ production: true, browser: true })
  };

  var devServerRender = {
    devtool: 'sourcemap',
    context: PATHS.src,
    entry: { server: '../server/main' },
    target: 'node',
    node: node,
    externals: externals,
    output: {
      path: PATHS.dist,
      filename: '[name].dev.js',
      publicPath: PATHS.public,
      libraryTarget: 'commonjs2'
    },
    module: { rules: rules({ production: false, browser: false }) },
    resolve: resolve,
    plugins: plugins({ production: false, browser: false })
  };

  var devBrowserRender = {
    devtool: 'cheap-module-source-map',
    context: PATHS.src,
    entry: {
      app: ['react-hot-loader/patch', 'webpack-hot-middleware/client?path=/__webpack_hmr&timeout=20000&reload=true', './main.jsx'],
      vendor: vendor
    },
    node: node,
    output: {
      path: PATHS.assets,
      pathinfo: true,
      filename: '[name].js',
      chunkFilename: '[name].js',
      publicPath: PATHS.public
    },
    module: { rules: rules({ production: false, browser: true }) },
    resolve: resolve,
    plugins: plugins({ production: false, browser: true })
  };

  var prodConfig = [prodBrowserRender, prodServerRender];
  var devConfig = isBrowser ? devBrowserRender : devServerRender;
  var configuration = isProduction ? prodConfig : devConfig;

  return configuration;
};