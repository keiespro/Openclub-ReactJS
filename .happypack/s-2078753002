'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrapTable = require('react-bootstrap-table');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./MemberList.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MemberList = function (_Component) {
  (0, _inherits3.default)(MemberList, _Component);

  function MemberList(props) {
    (0, _classCallCheck3.default)(this, MemberList);

    var _this = (0, _possibleConstructorReturn3.default)(this, (MemberList.__proto__ || (0, _getPrototypeOf2.default)(MemberList)).call(this, props));

    _this.state = {
      selected: []
    };

    _this.setSelected = _this.setSelected.bind(_this);
    _this.setSelectAll = _this.setSelectAll.bind(_this);
    _this.imageFormat = _this.imageFormat.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(MemberList, [{
    key: 'setSelectAll',
    value: function setSelectAll(select, rows) {
      var _this2 = this;

      rows.map(function (row) {
        return _this2.setSelected(row, select);
      });
    }
  }, {
    key: 'setSelected',
    value: function setSelected(row, select) {
      if (typeof window === 'undefined') return true;
      var key = row.user_id;
      var selected = this.state.selected;
      if (selected.includes(key) || select === false) {
        delete selected[selected.indexOf(key)];
      } else {
        selected.push(key);
      }
      this.setState({
        selected: selected
      });
    }
  }, {
    key: 'imageFormat',
    value: function imageFormat(cell, row) {
      var selected = this.state.selected.includes(row.user_id);
      var classes = (0, _classnames2.default)({
        'thumb32': true,
        'selected': selected
      });
      return _react2.default.createElement('img', { src: cell.thumb, className: classes, role: 'presentation' });
    }
  }, {
    key: 'render',
    value: function render() {
      var selected = this.state.selected;
      var _props = this.props,
          members = _props.members,
          select = _props.select;


      var options = {
        sizePerPage: 25,
        sizePerPageList: [25, 50, 100],
        nextPage: 'Next',
        prevPage: 'Prev'
      };

      var selectRow = select ? {
        mode: 'checkbox',
        selected: selected,
        clickToSelect: true,
        onSelect: this.setSelected,
        onSelectAll: this.setSelectAll,
        className: 'selected'
      } : { selected: [] };
      return _react2.default.createElement(
        _reactBootstrapTable.BootstrapTable,
        {
          options: options,
          data: members,
          striped: true,
          hover: true,
          pagination: true,
          selectRow: selectRow,
          bordered: false
        },
        _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, { hidden: true, isKey: true, dataField: 'user_id', 'export': false }),
        _react2.default.createElement(_reactBootstrapTable.TableHeaderColumn, {
          'export': false,
          dataField: 'images',
          dataFormat: this.imageFormat,
          columnClassName: 'photo'
        }),
        _react2.default.createElement(
          _reactBootstrapTable.TableHeaderColumn,
          { dataField: 'name', dataSort: true },
          'Name'
        ),
        _react2.default.createElement(
          _reactBootstrapTable.TableHeaderColumn,
          { dataField: 'join_date', dataSort: true },
          'Date Joined'
        ),
        _react2.default.createElement(
          _reactBootstrapTable.TableHeaderColumn,
          { dataField: 'email', dataSort: true },
          'Email'
        )
      );
    }
  }]);
  return MemberList;
}(_react.Component);

MemberList.propTypes = {
  members: _react.PropTypes.array,
  select: _react.PropTypes.bool
};
exports.default = MemberList;