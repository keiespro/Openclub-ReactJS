'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('redux');

var _reactRouterRedux = require('react-router-redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reactRouter = require('react-router');

var _reducers = require('./reducers');

var _reducers2 = _interopRequireDefault(_reducers);

var _actions = require('../modules/location/actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __CLIENT__ = typeof window !== 'undefined';
var _Env = Env,
    __DEV__ = _Env.__DEV__;


var store = void 0;

exports.default = function (history) {
  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // singleton store
  if (store) {
    return store;
  }

  // setup middlewares
  var middleware = (0, _redux.applyMiddleware)(_reduxThunk2.default, (0, _reactRouterRedux.routerMiddleware)(history));

  // setup enhancers
  if (__DEV__ && __CLIENT__) {
    var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;
    if (typeof devToolsExtension === 'function') {
      middleware = (0, _redux.compose)(middleware, devToolsExtension);
    }
  }

  // create the store
  store = middleware(_redux.createStore)((0, _reducers2.default)(), initialState);

  store.asyncReducers = {};

  // To unsubscribe, invoke `store.unsubscribeHistory()` anytime
  store.unsubscribeHistory = __CLIENT__ ? _reactRouter.browserHistory.listen((0, _actions.updateLocation)(store)) : null;

  if (module.hot) {
    module.hot.accept('./reducers', function () {
      var reducers = require('./reducers').default;
      store.replaceReducer(reducers(store.asyncReducers));
    });
  }

  return store;
};