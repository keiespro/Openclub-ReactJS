{"version":3,"sources":["src/components/Forms/DateField.jsx"],"names":["DateFieldInput","withoutKeys","object","omit","props","name","children","validations","value","context","getState","validation","validateField","label","help","formGroupProps","controlLabelProps","helpBlockProps","containerClassName","formControlProps","forceValidDate","dateFormat","onChange","handleChange","bind","date","Date","updateOnDateClick","collapseOnDateClick","showClock","forEach","child","type","merge","validationState","message","contextTypes","func","defaultProps","propTypes","oneOfType","array","element","string","isRequired"],"mappings":"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","file":"DateField.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes, Children } from 'react'\nimport { FormGroup, FormControl, ControlLabel, HelpBlock } from 'react-bootstrap';\nimport { DateField, DatePicker } from 'react-date-picker';\nimport _ from 'lodash';\n\nimport './styles/DateField.scss';\n\nclass DateFieldInput extends Component {\n  static contextTypes = {\n    handleChange: PropTypes.func,\n    getState: PropTypes.func,\n    validateField: PropTypes.func\n  }\n  static defaultProps = {\n    help: '',\n    label: ''\n  }\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.element\n    ]),\n    label: PropTypes.string,\n    help: PropTypes.string,\n    validations: PropTypes.array,\n    name: PropTypes.string.isRequired\n  }\n  render() {\n    const withoutKeys = (object) => _.omit(object, ['children', 'containerClassName']);\n    const { name, children, validations } = this.props;\n    const value = this.context.getState(name);\n    const validation = validations ? this.context.validateField(name, validations) : null;\n    let label = this.props.label;\n    let help = this.props.help;\n    let formGroupProps = {};\n    let controlLabelProps = {};\n    let helpBlockProps = {};\n    let containerClassName = '';\n    let formControlProps = {\n      forceValidDate: true,\n      dateFormat: 'DD/MM/YYYY',\n      onChange: this.context.handleChange.bind(this, name),\n      date: value || new Date(),\n      updateOnDateClick: true,\n      collapseOnDateClick: true,\n      showClock: false,\n    };\n\n    if (children) {\n      Children.forEach(children, (child) => {\n        if (child.type === ControlLabel) {\n          label = child.props.children;\n          controlLabelProps = withoutKeys(_.merge(controlLabelProps, child.props));\n        }\n        if (child.type === HelpBlock) {\n          help = child.props.children;\n          helpBlockProps = withoutKeys(_.merge(helpBlockProps, child.props));\n        }\n        if (child.type === FormControl) {\n          if ('containerClassName' in child.props) {\n            containerClassName = child.props.containerClassName;\n          }\n          formControlProps = withoutKeys(_.merge(formControlProps, child.props));\n        }\n      });\n    }\n\n    if (validation) {\n      formGroupProps.validationState = validation.type;\n      help = validation.message;\n    }\n\n    return (\n      <FormGroup\n        controlId={`formcontrol-${name}`}\n        {...formGroupProps}\n      >\n        <ControlLabel {...controlLabelProps}>{label}</ControlLabel>\n        <div className={containerClassName}>\n          <DateField {...formControlProps}>\n            <DatePicker\n              navigation\n              locale=\"en\"\n              forceValidDate\n              highlightWeekends\n              highlightToday\n              weekNumbers\n              weekStartDay={0}\n            />\n          </DateField>\n          <HelpBlock {...helpBlockProps}>{help}</HelpBlock>\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nexport default DateFieldInput;\n"]}