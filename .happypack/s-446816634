'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _formValidation = require('utils/formValidation');

var _formValidation2 = _interopRequireDefault(_formValidation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//eslint-disable-line

var FormContainer = function (_Component) {
  (0, _inherits3.default)(FormContainer, _Component);

  function FormContainer(props) {
    (0, _classCallCheck3.default)(this, FormContainer);

    var _this = (0, _possibleConstructorReturn3.default)(this, (FormContainer.__proto__ || (0, _getPrototypeOf2.default)(FormContainer)).call(this, props));

    _this.formValidation = new _formValidation2.default();
    _this.validateField = _this.validateField.bind(_this);
    _this.getState = _this.getState.bind(_this);
    _this.handleChange = _this.handleChange.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(FormContainer, [{
    key: 'handleChange',
    value: function handleChange(name, e) {
      var value = e;
      if (e.target) {
        value = e.target.value;
      }
      var _props = this.props,
          state = _props.state,
          setState = _props.setState;

      var clonedState = _lodash2.default.clone(state);
      // clonedState.validations = this.formValidation.checkAll();
      setState(_lodash2.default.set(clonedState, name, value));
    }
  }, {
    key: 'validateField',
    value: function validateField(name, validations) {
      return this.formValidation.check(name, validations, this.getState(name));
    }
  }, {
    key: 'getState',
    value: function getState(name) {
      var state = this.props.state;

      return _lodash2.default.get(state, name);
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      var handleChange = this.handleChange,
          getState = this.getState,
          validateField = this.validateField;

      return {
        handleChange: handleChange,
        getState: getState,
        validateField: validateField
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          horizontal = _props2.horizontal,
          inline = _props2.inline;

      var config = {
        horizontal: horizontal,
        inline: inline
      };

      return _react2.default.createElement(
        _reactBootstrap.Form,
        config,
        children
      );
    }
  }]);
  return FormContainer;
}(_react.Component);

FormContainer.childContextTypes = {
  handleChange: _react.PropTypes.func.isRequired,
  getState: _react.PropTypes.func.isRequired,
  validateField: _react.PropTypes.func.isRequired
};
FormContainer.propTypes = {
  setState: _react.PropTypes.func.isRequired,
  state: _react.PropTypes.object.isRequired,
  children: _react.PropTypes.array.isRequired,
  horizontal: _react.PropTypes.bool,
  inline: _react.PropTypes.bool
};
exports.default = FormContainer;