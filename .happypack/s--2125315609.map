{"version":3,"sources":["src/containers/AppContainer.jsx"],"names":["AppContainer","store","props","height","server","client","renderServer","renderClient","propTypes","object","isRequired","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;IAEMA,Y;;;;;;;;;;mCAOW;AAAA,UACLC,KADK,GACK,KAAKC,KADV,CACLD,KADK;;;AAGb,aACE;AAAA;AAAA,UAAgB,OAAOA,KAAvB,EAA8B,wBAA9B;AACE;AAAA;AAAA,YAAK,OAAO,EAAEE,QAAQ,MAAV,EAAZ;AACE,6DAAY,KAAKD,KAAjB;AADF;AADF,OADF;AAOD;;;mCACc;AAAA,UACLD,KADK,GACK,KAAKC,KADV,CACLD,KADK;;;AAGb,aACE;AAAA;AAAA,UAAgB,OAAOA,KAAvB,EAA8B,wBAA9B;AACE;AAAA;AAAA,YAAK,OAAO,EAAEE,QAAQ,MAAV,EAAZ;AACE,oEAAmB,KAAKD,KAAxB;AADF;AADF,OADF;AAOD;;;6BAEQ;AAAA,mBACoB,KAAKA,KADzB;AAAA,UACCE,MADD,UACCA,MADD;AAAA,UACSC,MADT,UACSA,MADT;;AAEP,UAAID,MAAJ,EAAY,OAAO,KAAKE,YAAL,EAAP;AACZ,UAAID,MAAJ,EAAY,OAAO,KAAKE,YAAL,EAAP;AACb;;;;;AAlCGP,Y,CACGQ,S,GAAY;AACjBP,SAAO,iBAAUQ,MAAV,CAAiBC,UADP;AAEjBN,UAAQ,iBAAUO,IAFD;AAGjBN,UAAQ,iBAAUM;AAHD,C;kBAoCNX,Y","file":"AppContainer.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Router, RouterContext } from 'react-router'\nimport { ApolloProvider } from 'react-apollo'\nimport apolloClient from '../modules/apollo'\n\nclass AppContainer extends Component {\n  static propTypes = {\n    store: PropTypes.object.isRequired,\n    server: PropTypes.bool,\n    client: PropTypes.bool\n  }\n\n  renderClient() {\n    const { store } = this.props;\n\n    return (\n      <ApolloProvider store={store} client={apolloClient}>\n        <div style={{ height: '100%' }}>\n          <Router {...this.props} />\n        </div>\n      </ApolloProvider>\n    )\n  }\n  renderServer() {\n    const { store } = this.props;\n\n    return (\n      <ApolloProvider store={store} client={apolloClient}>\n        <div style={{ height: '100%' }}>\n          <RouterContext {...this.props} />\n        </div>\n      </ApolloProvider>\n    )\n  }\n\n  render() {\n    const { server, client } = this.props;\n    if (server) return this.renderServer();\n    if (client) return this.renderClient();\n  }\n}\n\nexport default AppContainer\n"]}