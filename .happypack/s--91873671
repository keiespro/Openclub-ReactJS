'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _Forms = require('components/Forms');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _componentDebug = require('utils/componentDebug');

var _componentDebug2 = _interopRequireDefault(_componentDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Financial = function (_Component) {
  (0, _inherits3.default)(Financial, _Component);

  function Financial(props) {
    (0, _classCallCheck3.default)(this, Financial);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Financial.__proto__ || (0, _getPrototypeOf2.default)(Financial)).call(this, props));

    _this.tax = {};

    _this.state = {
      club: {
        type: 'registered',
        entity_name: 'BMW Club Queensland Incorporated',
        entity_number: '31 016 074 144',
        entity_number_type: 'abn',
        taxes: [{
          name: 'GST',
          type: 'inclusive',
          value: '10'
        }]
      }
    };

    _this.toggleSelect = _this.toggleSelect.bind(_this);
    _this.radioChange = _this.radioChange.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Financial, [{
    key: 'toggleSelect',
    value: function toggleSelect(e) {
      e.preventDefault();
      this.setState({
        select: this.state.select === false
      });
    }
  }, {
    key: 'changeInput',
    value: function changeInput(field, e) {
      var change = {};
      change[field] = e.target.value;
      this.setState(change);
    }
  }, {
    key: 'radioChange',
    value: function radioChange(e) {
      var newState = this.state.club;
      newState[e.target.name] = e.target.value;
      this.setClubState(newState);
    }
  }, {
    key: 'setClubState',
    value: function setClubState(state) {
      this.setState({ club: _lodash2.default.assign(this.state.club, state) });
    }
  }, {
    key: 'deleteTax',
    value: function deleteTax(key) {
      var newState = this.state.club;
      delete newState.taxes[key];
      this.setClubState(newState);
    }
  }, {
    key: 'addTax',
    value: function addTax(e) {
      e.preventDefault();
      var newState = this.state.club;
      newState.taxes.push({
        name: this.tax.name.value,
        type: this.tax.type.value,
        value: this.tax.value.value
      });
      this.setClubState(newState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactBootstrap.Row,
        null,
        _react2.default.createElement(_componentDebug2.default, { component: this }),
        _react2.default.createElement(
          _reactBootstrap.Col,
          { xs: 12 },
          _react2.default.createElement(
            'div',
            { className: 'card' },
            _react2.default.createElement(
              'div',
              { className: 'card-item' },
              _react2.default.createElement('img', { src: '/img/banners/finance.png', alt: 'Finance background', className: 'fw img-responsive' }),
              _react2.default.createElement(
                'div',
                { className: 'col-xs-8 card-item-text bg-transparent' },
                _react2.default.createElement(
                  'h3',
                  { className: 'pl-lg text-primary' },
                  'Financial details',
                  _react2.default.createElement('br', null),
                  _react2.default.createElement(
                    'small',
                    { className: 'ml0' },
                    'Setup your club for online payments and tax.'
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'card-body' },
              _react2.default.createElement(
                _Forms.Form,
                { state: this.state.club, setState: this.setClubState.bind(this), horizontal: true },
                _react2.default.createElement(
                  'h5',
                  null,
                  'Club legal type',
                  _react2.default.createElement('br', null),
                  _react2.default.createElement(
                    'small',
                    { className: 'm0' },
                    "Depending on the type of club you operate, we have different setup options."
                  )
                ),
                _react2.default.createElement(
                  _Forms.FieldSet,
                  null,
                  _react2.default.createElement(
                    _Forms.FormGroup,
                    { controlId: 'name' },
                    _react2.default.createElement(
                      'div',
                      null,
                      _react2.default.createElement(
                        _Forms.Radio,
                        { name: 'type', value: 'none', onChange: this.radioChange, checked: this.state.club.type === 'none' },
                        _react2.default.createElement('i', { className: 'fa fa-ban' }),
                        ' Off',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                          'span',
                          { className: 'help-block ml-lg' },
                          "The club isn't setup for payments."
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      null,
                      _react2.default.createElement(
                        _Forms.Radio,
                        { name: 'type', value: 'registered', onChange: this.radioChange, checked: this.state.club.type === 'registered' },
                        _react2.default.createElement('i', { className: 'fa fa-building' }),
                        ' Registered',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                          'span',
                          { className: 'help-block ml-lg' },
                          'The club has a registered business or trades through an entity.'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      null,
                      _react2.default.createElement(
                        _Forms.Radio,
                        { name: 'type', value: 'private', onChange: this.radioChange, checked: this.state.club.type === 'private' },
                        _react2.default.createElement('i', { className: 'fa fa-user' }),
                        ' individual',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                          'span',
                          { className: 'help-block ml-lg' },
                          'The club is for private use with an individual receiving payments.'
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: this.state.club.type === 'registered' ? '' : 'hidden' },
                  _react2.default.createElement(
                    'h5',
                    null,
                    'Legal name and business number',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                      'small',
                      { className: 'm0' },
                      "Provide your club legal name and business number. This is not required if you are an individual."
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['max1000'], name: 'entity_name' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Entity Name'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Name of the entity that will be accepting payments (ie. Your Club Pty Ltd).'
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { name: 'entity_number_type' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Number type'
                      ),
                      _react2.default.createElement(
                        _Forms.FormControl,
                        { componentClass: 'select', containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' },
                        _react2.default.createElement(
                          'option',
                          { value: 'blank' },
                          '-'
                        ),
                        _react2.default.createElement(
                          'option',
                          { value: 'abn' },
                          'Australian Business Number'
                        ),
                        _react2.default.createElement(
                          'option',
                          { value: 'nzbn' },
                          'New Zealand Business Number'
                        ),
                        _react2.default.createElement(
                          'option',
                          { value: 'vat' },
                          'VAT identification number'
                        )
                      ),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        "Enter the type of number that you've provided."
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['' + this.state.club.entity_number_type], name: 'entity_number' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Entity number'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'If you have a business number or tax ID that your entity uses, please enter it.'
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: this.state.club.type === 'private' ? '' : 'hidden' },
                  _react2.default.createElement(
                    'h5',
                    null,
                    'Individual details',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                      'small',
                      { className: 'm0' },
                      "We just need the name of the person taking payments."
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['max1000'], name: 'entity_name' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Individual Name'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Enter the full name of the person who will be taking payments.'
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: this.state.club.type !== 'blank' ? '' : 'hidden' },
                  _react2.default.createElement(
                    'h5',
                    null,
                    'Taxes',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                      'small',
                      { className: 'm0' },
                      "If you're required to charge or display taxes, we can add these to invoices and receipts made within OpenClub."
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'table-responsive' },
                    _react2.default.createElement(
                      'table',
                      { className: 'table table-striped' },
                      _react2.default.createElement(
                        'thead',
                        null,
                        _react2.default.createElement(
                          'tr',
                          null,
                          _react2.default.createElement(
                            'th',
                            null,
                            'Tax name'
                          ),
                          _react2.default.createElement(
                            'th',
                            null,
                            'Type'
                          ),
                          _react2.default.createElement(
                            'th',
                            null,
                            'Value'
                          ),
                          _react2.default.createElement(
                            'th',
                            null,
                            'Options'
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'tbody',
                        null,
                        this.state.club.taxes.map(function (value, key) {
                          return _react2.default.createElement(
                            'tr',
                            { key: 'tax' + key },
                            _react2.default.createElement(
                              'td',
                              null,
                              value.name
                            ),
                            _react2.default.createElement(
                              'td',
                              null,
                              value.type
                            ),
                            _react2.default.createElement(
                              'td',
                              null,
                              value.value,
                              '%'
                            ),
                            _react2.default.createElement(
                              'td',
                              null,
                              _react2.default.createElement(
                                'button',
                                { className: 'btn btn-danger', onClick: _this2.deleteTax.bind(_this2, key) },
                                _react2.default.createElement('i', { className: 'fa fa-trash' })
                              )
                            )
                          );
                        }),
                        _react2.default.createElement(
                          'tr',
                          null,
                          _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(_Forms.FormControl, { type: 'text', name: 'name', reg: function reg(input) {
                                _this2.tax.name = input;
                              } })
                          ),
                          _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                              _Forms.FormControl,
                              { componentClass: 'select', type: 'select', name: 'type', reg: function reg(input) {
                                  _this2.tax.type = input;
                                } },
                              _react2.default.createElement(
                                'option',
                                { value: 'inclusive' },
                                'Inclusive'
                              ),
                              _react2.default.createElement(
                                'option',
                                { value: 'exclusive' },
                                'Exclusive'
                              )
                            )
                          ),
                          _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(_Forms.FormControl, { type: 'number', name: 'value', reg: function reg(input) {
                                _this2.tax.value = input;
                              } })
                          ),
                          _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                              'button',
                              { className: 'btn btn-success', onClick: this.addTax.bind(this) },
                              _react2.default.createElement('i', { className: 'fa fa-plus' })
                            )
                          )
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'h5',
                    null,
                    'Bank account',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                      'small',
                      { className: 'm0' },
                      "Nominate a bank account for OpenClub to deposit funds into."
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['name'], name: 'bank.account_holder_name' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Account Name'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Enter the name for the bank account.'
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['name'], name: 'bank.account_holder_type' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Account Type'
                      ),
                      _react2.default.createElement(
                        _Forms.FormControl,
                        { componentClass: 'select', containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'select' },
                        _react2.default.createElement(
                          'option',
                          { value: '' },
                          '-'
                        ),
                        _react2.default.createElement(
                          'option',
                          { value: 'individual' },
                          'Individual'
                        ),
                        _react2.default.createElement(
                          'option',
                          { value: 'company' },
                          'Business'
                        )
                      ),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Enter the type of bank account.'
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['number'], name: 'bank.account_number' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'Account Number'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Enter the bank account number.'
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _Forms.FieldSet,
                    null,
                    _react2.default.createElement(
                      _Forms.Input,
                      { validations: ['number'], name: 'bank.routing_number' },
                      _react2.default.createElement(
                        _Forms.ControlLabel,
                        { className: 'col-xs-12 col-md-2' },
                        'BSB / Routing Number'
                      ),
                      _react2.default.createElement(_Forms.FormControl, { containerClassName: 'col-xs-12 col-md-6', className: 'input-lg', type: 'text' }),
                      _react2.default.createElement(
                        _Forms.HelpBlock,
                        null,
                        'Enter your BSB or account routing number (for international bank accounts).'
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);
  return Financial;
}(_react.Component);

Financial.propTypes = {
  params: _react.PropTypes.object
};
exports.default = Financial;