{"version":3,"sources":["build/plugins.js"],"names":["webpack","require","ExtractTextPlugin","HappyPackLoader","config","fs","module","exports","production","browser","bannerOptions","raw","banner","compress","warnings","ExtractText","filename","allChunks","CommonChunks","optimize","CommonsChunkPlugin","names","HappyPack","loaders","BuildStats","plugin","stats","writeFileSync","paths","dist","toJson","DefinePlugin","globals","EnvironmentPlugin","BannerPlugin","HotModuleReplacementPlugin","NoEmitOnErrorsPlugin","NamedModulesPlugin","UglifyJsPlugin"],"mappings":";;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,oBAAoBD,QAAQ,6BAAR,CAA1B;AACA,IAAME,kBAAkBF,QAAQ,WAAR,CAAxB;AACA,IAAMG,SAASH,QAAQ,iBAAR,CAAf;AACA,IAAMI,KAAKJ,QAAQ,IAAR,CAAX;;AAEAK,OAAOC,OAAP,GAAiB,YAAkD;AAAA,iFAAP,EAAO;AAAA,6BAA/CC,UAA+C;AAAA,MAA/CA,UAA+C,mCAAlC,KAAkC;AAAA,0BAA3BC,OAA2B;AAAA,MAA3BA,OAA2B,gCAAjB,KAAiB;;AACjE,MAAMC,gBAAgB,EAAEC,KAAK,IAAP,EAAaC,QAAQ,0CAArB,EAAtB;AACA,MAAMC,WAAW,EAAEC,UAAU,KAAZ,EAAjB;;AAEA,MAAMC,cAAc,IAAIb,iBAAJ,CAAsB,EAAEc,UAAU,mBAAZ,EAAiCC,WAAW,IAA5C,EAAtB,CAApB;AACA,MAAMC,eAAe,IAAIlB,QAAQmB,QAAR,CAAiBC,kBAArB,CAAwC;AAC3DC,WAAO,CAAC,QAAD;AADoD,GAAxC,CAArB;AAGA,MAAMC,YAAY,IAAInB,eAAJ,CAAoB;AACpCoB,aAAS,CAAC,cAAD;AAD2B,GAApB,CAAlB;;AAIA,WAASC,UAAT,GAAsB;AACpB,SAAKC,MAAL,CAAY,MAAZ,EAAoB,UAACC,KAAD,EAAW;AAC7BrB,SAAGsB,aAAH,CAAiBvB,OAAOwB,KAAP,CAAaC,IAAb,GAAoB,aAArC,EAAoD,yBAAeH,MAAMI,MAAN,EAAf,CAApD;AACD,KAFD;AAGD;;AAED,MAAI,CAACtB,UAAD,IAAe,CAACC,OAApB,EAA6B;AAC3B,WAAO,CACL,IAAIT,QAAQ+B,YAAZ,CAAyB3B,OAAO4B,OAAhC,CADK,EAEL,IAAIhC,QAAQiC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B,CAFK,EAGLlB,WAHK,EAIL,IAAIf,QAAQkC,YAAZ,CAAyBxB,aAAzB,CAJK,EAKLY,SALK,CAAP;AAOD;AACD,MAAI,CAACd,UAAD,IAAeC,OAAnB,EAA4B;AAC1B,WAAO,CACLe,UADK,EAELN,YAFK,EAGL,IAAIlB,QAAQ+B,YAAZ,CAAyB3B,OAAO4B,OAAhC,CAHK,EAIL,IAAIhC,QAAQiC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B,CAJK,EAKL,IAAIjC,QAAQmC,0BAAZ,EALK,EAML,IAAInC,QAAQoC,oBAAZ,EANK,EAOL,IAAIpC,QAAQqC,kBAAZ,EAPK,EAQLtB,WARK,EASL,IAAIf,QAAQoC,oBAAZ,EATK,EAULd,SAVK,CAAP;AAYD;AACD,MAAId,cAAc,CAACC,OAAnB,EAA4B;AAC1B,WAAO,CACL,IAAIT,QAAQ+B,YAAZ,CAAyB3B,OAAO4B,OAAhC,CADK,EAEL,IAAIhC,QAAQiC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B,CAFK,EAGL,IAAIjC,QAAQkC,YAAZ,CAAyBxB,aAAzB,CAHK,EAILK,WAJK,EAKL,IAAIf,QAAQmB,QAAR,CAAiBmB,cAArB,CAAoC,EAAEzB,kBAAF,EAApC,CALK,EAMLS,SANK,CAAP;AAQD;AACD,MAAId,cAAcC,OAAlB,EAA2B;AACzB,WAAO,CACLe,UADK,EAELN,YAFK,EAGL,IAAIlB,QAAQ+B,YAAZ,CAAyB3B,OAAO4B,OAAhC,CAHK,EAIL,IAAIhC,QAAQiC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B,CAJK,EAKLlB,WALK,EAML,IAAIf,QAAQmB,QAAR,CAAiBmB,cAArB,CAAoC,EAAEzB,kBAAF,EAApC,CANK,EAOLS,SAPK,CAAP;AASD;AACD,SAAO,EAAP;AACD,CA/DD","file":"plugins.js","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["const webpack = require('webpack');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst HappyPackLoader = require('happypack');\nconst config = require('../config/index');\nconst fs = require('fs');\n\nmodule.exports = ({ production = false, browser = false } = {}) => {\n  const bannerOptions = { raw: true, banner: 'require(\"source-map-support\").install();' };\n  const compress = { warnings: false };\n\n  const ExtractText = new ExtractTextPlugin({ filename: '[name].[hash].css', allChunks: true });\n  const CommonChunks = new webpack.optimize.CommonsChunkPlugin({\n    names: ['vendor']\n  });\n  const HappyPack = new HappyPackLoader({\n    loaders: ['babel-loader']\n  });\n\n  function BuildStats() {\n    this.plugin(\"done\", (stats) => {\n      fs.writeFileSync(config.paths.dist + '/stats.json', JSON.stringify(stats.toJson()));\n    });\n  }\n\n  if (!production && !browser) {\n    return [\n      new webpack.DefinePlugin(config.globals),\n      new webpack.EnvironmentPlugin(['NODE_ENV']),\n      ExtractText,\n      new webpack.BannerPlugin(bannerOptions),\n      HappyPack\n    ];\n  }\n  if (!production && browser) {\n    return [\n      BuildStats,\n      CommonChunks,\n      new webpack.DefinePlugin(config.globals),\n      new webpack.EnvironmentPlugin(['NODE_ENV']),\n      new webpack.HotModuleReplacementPlugin(),\n      new webpack.NoEmitOnErrorsPlugin(),\n      new webpack.NamedModulesPlugin(),\n      ExtractText,\n      new webpack.NoEmitOnErrorsPlugin(),\n      HappyPack\n    ];\n  }\n  if (production && !browser) {\n    return [\n      new webpack.DefinePlugin(config.globals),\n      new webpack.EnvironmentPlugin(['NODE_ENV']),\n      new webpack.BannerPlugin(bannerOptions),\n      ExtractText,\n      new webpack.optimize.UglifyJsPlugin({ compress }),\n      HappyPack\n    ];\n  }\n  if (production && browser) {\n    return [\n      BuildStats,\n      CommonChunks,\n      new webpack.DefinePlugin(config.globals),\n      new webpack.EnvironmentPlugin(['NODE_ENV']),\n      ExtractText,\n      new webpack.optimize.UglifyJsPlugin({ compress }),\n      HappyPack\n    ];\n  }\n  return [];\n};\n"]}