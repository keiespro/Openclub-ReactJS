{"version":3,"sources":["src/store/index.js"],"names":["__CLIENT__","window","Env","__DEV__","store","history","initialState","middleware","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","asyncReducers","unsubscribeHistory","listen","module","hot","accept","reducers","require","default","replaceReducer"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA,IAAMA,aAAa,OAAOC,MAAP,KAAkB,WAArC;WACoBC,G;IAAZC,O,QAAAA,O;;;AAER,IAAIC,cAAJ;;kBAEe,UAACC,OAAD,EAAgC;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;;AAC7C;AACA,MAAIF,KAAJ,EAAW;AAAE,WAAOA,KAAP;AAAc;;AAE3B;AACA,MAAIG,aAAa,kDAAuB,wCAAiBF,OAAjB,CAAvB,CAAjB;;AAEA;AACA,MAAIF,WAAWH,UAAf,EAA2B;AACzB,QAAMQ,oBAAoBP,OAAOQ,4BAAjC;AACA,QAAI,OAAOD,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CD,mBAAa,oBAAQA,UAAR,EAAoBC,iBAApB,CAAb;AACD;AACF;;AAED;AACAJ,UAAQG,+BAAwB,yBAAxB,EAA2CD,YAA3C,CAAR;;AAEAF,QAAMM,aAAN,GAAsB,EAAtB;;AAEA;AACAN,QAAMO,kBAAN,GAA2BX,aAAa,4BAAeY,MAAf,CAAsB,6BAAeR,KAAf,CAAtB,CAAb,GAA4D,IAAvF;;AAEA,MAAIS,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpC,UAAMC,WAAWC,QAAQ,YAAR,EAAsBC,OAAvC;AACAd,YAAMe,cAAN,CAAqBH,SAASZ,MAAMM,aAAf,CAArB;AACD,KAHD;AAID;;AAED,SAAON,KAAP;AACD,C","file":"index.js","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk'\nimport { browserHistory } from 'react-router'\nimport makeRootReducer from './reducers'\nimport { updateLocation } from '../modules/location/actions'\n\nconst __CLIENT__ = typeof window !== 'undefined';\nconst { __DEV__ } = Env;\n\nlet store\n\nexport default (history, initialState = {}) => {\n  // singleton store\n  if (store) { return store }\n\n  // setup middlewares\n  let middleware = applyMiddleware(thunk, routerMiddleware(history));\n\n  // setup enhancers\n  if (__DEV__ && __CLIENT__) {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n    if (typeof devToolsExtension === 'function') {\n      middleware = compose(middleware, devToolsExtension);\n    }\n  }\n\n  // create the store\n  store = middleware(createStore)(makeRootReducer(), initialState);\n\n  store.asyncReducers = {}\n\n  // To unsubscribe, invoke `store.unsubscribeHistory()` anytime\n  store.unsubscribeHistory = __CLIENT__ ? browserHistory.listen(updateLocation(store)) : null\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const reducers = require('./reducers').default\n      store.replaceReducer(reducers(store.asyncReducers))\n    })\n  }\n\n  return store\n}\n"]}