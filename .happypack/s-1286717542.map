{"version":3,"sources":["src/routes/Event/components/Event.jsx"],"names":["EventComponent","props","state","event","children","params","location","path","event_id","collapseHeader","pathname","name","propTypes","oneOfType","element","array","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;IAEMA,c;;;AAQJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sJACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAIlB;AACD;AACA;AACA;;;;;6BACS;AAAA,mBACuC,KAAKD,KAD5C;AAAA,UACCE,KADD,UACCA,KADD;AAAA,UACQC,QADR,UACQA,QADR;AAAA,UACkBC,MADlB,UACkBA,MADlB;AAAA,UAC0BC,QAD1B,UAC0BA,QAD1B;;AAEP,UAAMC,mBAAiBF,OAAOG,QAA9B;;AAEA,UAAMC,iBAAiB,CAACH,SAASI,QAAT,KAAsBH,IAAtB,IAA8BD,SAASI,QAAT,KAAyBH,IAAzB,MAA/B,MAAqE,KAA5F;;AAEA,aACE;AAAA;AAAA;AACE,+FACMJ,KADN;AAEE,qBAAWM;AAFb,WADF;AAKE;AAAA;AAAA,YAAS,aAAaF,IAAtB,EAA4B,OAAOD,QAAnC;AACE,0EAAa,OAAOH,MAAMQ,IAA1B,EAAgC,IAAG,GAAnC,GADF;AAEE,0EAAa,OAAM,WAAnB,EAA+B,IAAG,YAAlC,GAFF;AAGE,0EAAa,aAAb,GAHF;AAIE,0EAAa,OAAM,QAAnB,EAA4B,IAAG,SAA/B,GAJF;AAKE,0EAAa,OAAM,UAAnB,EAA8B,IAAG,WAAjC,GALF;AAME,0EAAa,OAAO,qCAAG,WAAU,YAAb,GAApB,EAAkD,IAAG,WAArD,GANF;AAOE;AAAA;AAAA,cAAQ,WAAU,6DAAlB;AAAA;AAAA;AAPF,SALF;AAgBE;AAAA;AAAA,YAAM,WAAN;AACGP;AADH;AAhBF,OADF;AAsBD;;;;;AA5CGJ,c,CACGY,S,GAAY;AACjBR,YAAU,iBAAUS,SAAV,CAAoB,CAAC,iBAAUC,OAAX,EAAoB,iBAAUC,KAA9B,CAApB,CADO;AAEjBZ,SAAO,iBAAUa,MAFA;AAGjBV,YAAU,iBAAUU,MAHH;AAIjBX,UAAQ,iBAAUW;AAJD,C;kBA6CNhB,c","file":"Event.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { ObjectPageHeader } from 'components/Pages/ObjectPage';\nimport { MenuBar, MenuBarItem } from 'components/HorizontalMenuBar';\nimport { Grid } from 'react-bootstrap';\n\nclass EventComponent extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n    event: PropTypes.object,\n    location: PropTypes.object,\n    params: PropTypes.object,\n    // syncEvent: PropTypes.func\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  // componentWillMount() { //FIXME\n  //   this.props.syncEvent(this.props.params.event_id);\n  // }\n  render() {\n    const { event, children, params, location } = this.props;\n    const path = `/event/${params.event_id}`;\n\n    const collapseHeader = (location.pathname === path || location.pathname === `${path}/`) === false;\n\n    return (\n      <section>\n        <ObjectPageHeader\n          {...event}\n          collapsed={collapseHeader}\n        />\n        <MenuBar routePrefix={path} route={location}>\n          <MenuBarItem label={event.name} to=\"/\" />\n          <MenuBarItem label=\"Attendees\" to=\"/attendees\" />\n          <MenuBarItem divider />\n          <MenuBarItem label=\"Prices\" to=\"/prices\" />\n          <MenuBarItem label=\"Check-in\" to=\"/check-in\" />\n          <MenuBarItem label={<i className=\"fa fa-gear\" />} to=\"/settings\" />\n          <button className=\"btn btn-danger menu-btn-inner pull-right ripple pl-xl pr-xl\">\n            Buy Tickets\n          </button>\n        </MenuBar>\n        <Grid fluid>\n          {children}\n        </Grid>\n      </section>\n    );\n  }\n}\nexport default EventComponent;\n"]}