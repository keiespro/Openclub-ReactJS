{"version":3,"sources":["src/routes/Events/components/create_event_form.jsx"],"names":["CreateEventForm","clubs","handleSubmit","createForm","slugString","values","slug","map","label","c","name","value","_id","CreateEventReduxForm","form","state","create_event"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,OAAyC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,YAA+B,QAA/BA,YAA+B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;;AAE/D,MAAMC,aAAcD,cAAcA,WAAWE,MAAzB,IAAmCF,WAAWE,MAAX,CAAkBC,IAAtD,GACjBH,WAAWE,MAAX,CAAkBC,IADD,GACQ,gBAD3B;;AAGA,SACE;AAAA;AAAA,MAAM,WAAU,iBAAhB,EAAkC,UAAUJ,YAA5C;AACE;AAAA;AAAA;AACE;AACE,cAAK,iBADP;AAEE,eAAM,cAFR;AAGE,cAAK,MAHP;AAIE,cAAK,mCAJP;AAKE,gCALF;AAME,iBAASD,MAAMM,GAAN,CAAU;AAAA,iBAAM,EAAEC,OAAOC,EAAEC,IAAX,EAAiBC,OAAOF,EAAEG,GAA1B,EAAN;AAAA,SAAV;AANX;AADF,KADF;AAWE;AAAA;AAAA;AACE;AACE,cAAK,aADP;AAEE,eAAM,aAFR;AAGE,cAAK,MAHP;AAIE,cAAK,iCAJP;AAKE,kBAAU,mBAAW,uBAAU,GAAV,CAAX,CALZ;AAME;AANF;AADF,KAXF;AAqBE;AAAA;AAAA;AACE;AACE,cAAK,MADP;AAEE,eAAM,YAFR;AAGE,cAAK,MAHP;AAIE,uFAA6ER,UAA7E,OAJF;AAKE,kBAAU,gCALZ;AAME;AANF;AADF,KArBF;AA+BE;AAAA;AAAA;AACE;AACE,cAAK,yBADP;AAEE,eAAM,aAFR;AAGE,cAAK,sDAHP;AAIE;AAJF;AADF,KA/BF;AAwCE;AAAA;AAAA,QAAQ,MAAK,QAAb;AAAA;AAAA;AAxCF,GADF;AA4CD,CAjDD;;AAmDA,IAAMS,uBAAuB,0BAAU;AACrCC,QAAM;AAD+B,CAAV,EAE1Bd,eAF0B,CAA7B;;kBAIe,yBAAQ;AAAA,SAAU;AAC/BG,gBAAYY,MAAMD,IAAN,CAAWE;AADQ,GAAV;AAAA,CAAR,EAEXH,oBAFW,C","file":"create_event_form.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Input, FieldSet, ImageUpload, Select } from 'components/Forms'\nimport { required, maxLength, slug } from 'utils/form_validation/errors'\n\nconst CreateEventForm = ({ clubs, handleSubmit, createForm }) => {\n\n  const slugString = (createForm && createForm.values && createForm.values.slug) ?\n    createForm.values.slug : '<your id here>'\n\n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit}>\n      <FieldSet>\n        <Field\n          name=\"hosting_club_id\"\n          label=\"Hosting Club\"\n          type=\"text\"\n          help=\"Which club is hosting this event?\"\n          component={Select}\n          options={clubs.map(c => ({ label: c.name, value: c._id }))}\n        />\n      </FieldSet>\n      <FieldSet>\n        <Field\n          name=\"event.title\"\n          label=\"Event Title\"\n          type=\"text\"\n          help=\"What is the name of this event?\"\n          validate={[required, maxLength(128)]}\n          component={Input}\n        />\n      </FieldSet>\n      <FieldSet>\n        <Field\n          name=\"slug\"\n          label=\"Event Link\"\n          type=\"text\"\n          help={`Enter a unique link for your event to use (http://openclub.co/event/${slugString}).`}\n          validate={[required, slug]}\n          component={Input}\n        />\n      </FieldSet>\n      <FieldSet>\n        <Field\n          name=\"event.images.background\"\n          label=\"Event Image\"\n          help=\"Select an image to use as the events banner picture.\"\n          component={ImageUpload}\n        />\n      </FieldSet>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nconst CreateEventReduxForm = reduxForm({\n  form: 'create_event'\n})(CreateEventForm)\n\nexport default connect(state => ({\n  createForm: state.form.create_event\n}))(CreateEventReduxForm)\n"]}