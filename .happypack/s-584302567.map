{"version":3,"sources":["src/routes/Club/components/ClubView.jsx"],"names":["ClubView","data","params","location","children","collapseHeader","pathname","includes","club","loading","console","log","name","images","club_id","propTypes","oneOfType","array","element","object","clubQuery","ClubViewWithApollo","options","variables","slug"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,OAA0C;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzD,MAAMC,iBAAiBF,SAASG,QAAT,CAAkBC,QAAlB,CAA2B,OAA3B,MAAwC,KAA/D;AADyD,MAEjDC,IAFiD,GAE/BP,IAF+B,CAEjDO,IAFiD;AAAA,MAE3CC,OAF2C,GAE/BR,IAF+B,CAE3CQ,OAF2C;;;AAIzDC,UAAQC,GAAR,CAAYV,IAAZ;;AAEA,MAAGQ,OAAH,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAG,CAACD,IAAJ,EAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SACE;AAAA;AAAA;AACE;AACE,YAAMA,KAAKI,IADb;AAEE,gBAAUJ,KAAKL,QAFjB;AAGE,cAAQK,KAAKK,MAHf;AAIE,iBAAWR;AAJb,MADF;AAOE;AAAA;AAAA,QAAS,mBAAiBH,OAAOY,OAAjC,EAA4C,OAAOX,QAAnD;AACE,sEAAa,OAAM,MAAnB,EAA0B,IAAG,OAA7B,GADF;AAEE,sEAAa,OAAM,QAAnB,EAA4B,IAAG,SAA/B,GAFF;AAGE,sEAAa,OAAM,OAAnB,EAA2B,IAAG,QAA9B,GAHF;AAIE,sEAAa,OAAM,WAAnB,EAA+B,IAAG,YAAlC,GAJF;AAKE,sEAAa,OAAM,eAAnB,EAAmC,IAAG,aAAtC,GALF;AAME,sEAAa,aAAb,GANF;AAOE,sEAAa,OAAM,cAAnB,EAAkC,IAAG,gBAArC,GAPF;AAQE,sEAAa,OAAM,SAAnB,EAA6B,IAAG,gBAAhC,GARF;AASE,sEAAa,OAAM,WAAnB,EAA+B,IAAG,kBAAlC,GATF;AAUE,sEAAa,OAAM,UAAnB,EAA8B,IAAG,iBAAjC,GAVF;AAWE,sEAAa,OAAM,UAAnB,EAA8B,IAAG,iBAAjC,GAXF;AAYE,sEAAa,OAAO,qCAAG,WAAU,YAAb,GAApB,EAAkD,IAAG,iBAArD,GAZF;AAaE;AAAA;AAAA,UAAQ,WAAU,8DAAlB;AAAA;AAAA;AAbF,KAPF;AAsBE;AAAA;AAAA,QAAM,WAAN;AACGC;AADH;AAtBF,GADF;AA4BD,CA1CD;;AA4CAJ,SAASe,SAAT,GAAqB;AACnBX,YAAU,iBAAUY,SAAV,CAAoB,CAC5B,iBAAUC,KADkB,EAE5B,iBAAUC,OAFkB,CAApB,CADS;AAKnBhB,UAAQ,iBAAUiB,MALC;AAMnB;AACAhB,YAAU,iBAAUgB,MAPD;AAQnBlB,QAAM,iBAAUkB;AARG,CAArB;;AAWA,IAAMC,sDAAN;;AAkBA,IAAMC,qBAAqB,0BAAQD,SAAR,EAAmB;AAC5CE,WAAS;AAAA,QAAGpB,MAAH,SAAGA,MAAH;AAAA,WAAiB,EAAEqB,WAAW,EAAEC,MAAMtB,OAAOY,OAAf,EAAb,EAAjB;AAAA;AADmC,CAAnB,EAExBd,QAFwB,CAA3B;;kBAIeqB,kB;QAGbrB,Q,GAAAA,Q","file":"ClubView.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Button, Grid } from 'react-bootstrap'\nimport { MenuBar, MenuBarItem, MenuBarDropdown, MenuBarDropdownItem } from 'components/HorizontalMenuBar'\nimport { ObjectPageHeader } from 'components/Pages/ObjectPage';\n\nimport './ClubView.scss'\n\nconst ClubView = ({ data, params, location, children }) => {\n  const collapseHeader = location.pathname.includes('/feed') === false\n  const { club, loading } = data\n\n  console.log(data)\n\n  if(loading){\n    return <div>Loading...</div>\n  }\n\n  if(!club){\n    return <div>Club not found</div>\n  }\n\n  return (\n    <section>\n      <ObjectPageHeader\n        name={club.name}\n        location={club.location}\n        images={club.images}\n        collapsed={collapseHeader}\n      />\n      <MenuBar routePrefix={`/${params.club_id}`} route={location}>\n        <MenuBarItem label=\"Feed\" to=\"/feed\" />\n        <MenuBarItem label=\"Events\" to=\"/events\" />\n        <MenuBarItem label=\"About\" to=\"/about\" />\n        <MenuBarItem label=\"Community\" to=\"/community\" />\n        <MenuBarItem label=\"My Membership\" to=\"/membership\" />\n        <MenuBarItem divider />\n        <MenuBarItem label=\"Club Profile\" to=\"/admin/profile\" />\n        <MenuBarItem label=\"Members\" to=\"/admin/members\" />\n        <MenuBarItem label=\"Approvals\" to=\"/admin/approvals\" />\n        <MenuBarItem label=\"Invoices\" to=\"/admin/invoices\" />\n        <MenuBarItem label=\"Finances\" to=\"/admin/finances\" />\n        <MenuBarItem label={<i className=\"fa fa-gear\" />} to=\"/admin/settings\" />\n        <button className=\"btn btn-primary menu-btn-inner pull-right ripple pl-xl pr-xl\">Join Club</button>\n      </MenuBar>\n      <Grid fluid>\n        {children}\n      </Grid>\n    </section>\n  )\n}\n\nClubView.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.element\n  ]),\n  params: PropTypes.object,\n  // syncClub: PropTypes.func,\n  location: PropTypes.object,\n  data: PropTypes.object\n}\n\nconst clubQuery = gql`\n  query club($slug: String!) {\n    club(slug: $slug) {\n      _id\n      name\n      images{\n        thumb\n        background\n        square\n      }\n      slug\n      settings{\n        privacy\n      }\n    }\n  }\n`\n\nconst ClubViewWithApollo = graphql(clubQuery, {\n  options: ({ params }) => ({ variables: { slug: params.club_id }}),\n})(ClubView)\n\nexport default ClubViewWithApollo\n\nexport {\n  ClubView\n}\n"]}