{"version":3,"sources":["src/components/EventCalendar/EventCalendar.jsx"],"names":["EventCalendar","props","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","date","monthStyle","backgroundImage","format","toLowerCase","backgroundAttachment","backgroundRepeat","backgroundSize","height","key","getDay","card","getTime","events","month","year","dayEvs","map","day","push","renderDayHeader","Date","i","renderEventCard","renderMonthHeader","renderDay","renderMonth","children","lastChildPath","someInc","forEach","child","type","childPath","setWith","Object","console","log","renderYear","propTypes","oneOfType","element","array"],"mappings":"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","file":"EventCalendar.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes, Children } from 'react';\nimport _ from 'lodash';\nimport m from 'moment';\n\nimport CalendarItem from './CalendarItem';\nimport './EventCalendar.scss';\n\nclass EventCalendar extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.array\n    ])\n  }\n  constructor(props) {\n    super(props);\n\n    this.calendar = {\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: '[Last] dddd',\n      sameElse: 'Do MMM YYYY'\n    };\n  }\n  renderMonthHeader(date) {\n    const monthStyle = {\n      backgroundImage: `url(/img/calendar/${m(date).format('MMMM').toLowerCase()}.jpg)`,\n      backgroundAttachment: 'fixed',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      height: 150\n    }\n    return (\n      <div className=\"card-item month-header\" key={`month-header-${m(date).format('MM')}`}>\n        <div className=\"fw img-responsive paralax\" style={monthStyle}/>\n        <div className=\"card-item-text bg-transparent\">\n          <h4>{m(date).format('MMMM')}</h4>\n        </div>\n      </div>\n    );\n  }\n  renderDayHeader(date, key) {\n    return <li key={`day-header-${date.getDay}-${key}`} className=\"timeline-separator\" data-datetime={m(date).calendar(null, this.calendar)} />\n  }\n  renderEventCard(card, key) {\n    const { props } = card;\n    return (\n      <li key={`${props.date.getTime()}${key}`}>\n        <div className=\"timeline-badge bg-primary\" />\n        <div className=\"timeline-panel\">\n          {card}\n        </div>\n      </li>\n    );\n  }\n  renderDay(events, month, year) {\n    let dayEvs = [];\n    Object.keys(events).map((day, key) => {\n      dayEvs.push(this.renderDayHeader(new Date(`${year}-${month}-${day}`), key));\n      Object.keys(events[`${day}`]).map((i) => dayEvs.push(this.renderEventCard(events[`${day}`][i], i)))\n      return true;\n    });\n    return <ul className=\"timeline-alt ml-lg mr-lg\">{dayEvs}</ul>;\n  }\n  renderMonth(events, year) {\n    return Object.keys(events).map((month) => (\n      <div className=\"card-body month fw p0\" key={`month-${month}`}>\n        {this.renderMonthHeader(new Date(`${year}-${month}-01`))}\n        {this.renderDay(events[`${month}`], month, year)}\n      </div>\n    ));\n  }\n  renderYear(events) {\n    return Object.keys(events).map((year) =>\n      <div key={`year-${year}`}>{this.renderMonth(events[`${year}`], year)}</div>\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n    let events = {}\n\n    let lastChildPath;\n    let someInc = 0;\n\n    Children.forEach(children, (child) => {\n      if (child.type === CalendarItem) {\n        let childPath = m(child.props.date).format(`'YYYY'.'MM'.'DD'`);\n        if (lastChildPath === childPath) {\n          someInc += 1;\n        } else {\n          lastChildPath = childPath;\n          someInc = 0;\n        }\n        childPath += `.'${someInc}'`\n        _.setWith(events, childPath, child, Object);\n      }\n    });\n    console.log(events);\n    return (\n\n      <div className=\"card calendar\">\n        {this.renderYear(events)}\n      </div>\n    );\n  }\n}\nexport default EventCalendar;\n"]}