{"version":3,"sources":["src/components/HorizontalMenuBar/MenuBarDropdown.jsx"],"names":["MenuBarDropdown","props","to","label","routePrefix","route","children","toRoute","classes","pathname","startsWith","modChildren","Children","map","cloneElement","c","propTypes","string","isRequired","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;IAEMA,e;;;;;;;;;;6BACK;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,EAFK,UAELA,EAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,WAJK,UAILA,WAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,QANK,UAMLA,QANK;;;AASP,UAAMC,gBAAcH,eAAe,EAA7B,IAAmCF,EAAzC;;AAEA,UAAMM,UAAU,0BAAW;AACzB,2BAAmBH,SAASA,MAAMI,QAAN,CAAeC,UAAf,CAA0BH,OAA1B;AADH,OAAX,EAEb,cAFa,CAAhB;;AAIA,UAAMI,cAAc,gBAAMC,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA6B;AAAA,eAAK,gBAAMQ,YAAN,CAAmBC,CAAnB,EAAsB;AAC1EV,sBAD0E;AAE1ED,uBAAaG;AAF6D,SAAtB,CAAL;AAAA,OAA7B,CAApB;;AAKA,aACE;AAAA;AAAA,UAAU,eAAV,EAAoB,IAAG,iBAAvB;AACE;AAAA,mCAAU,MAAV;AAAA,YAAiB,aAAjB,EAAyB,WAAWC,OAApC;AACGL;AADH,SADF;AAIE;AAAA,mCAAU,IAAV;AAAA,YAAe,WAAU,kBAAzB;AACGQ;AADH;AAJF,OADF;AAUD;;;;;AAGHX,gBAAgBgB,SAAhB,GAA4B;AAC1Bd,MAAI,iBAAUe,MADY;AAE1Bd,SAAO,iBAAUc,MAAV,CAAiBC,UAFE;AAG1Bd,eAAa,iBAAUa,MAHG;AAI1BZ,SAAO,iBAAUc;AAJS,CAA5B;;kBAOenB,e","file":"MenuBarDropdown.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport classNames from 'classnames'\n\nclass MenuBarDropdown extends Component {\n  render() {\n    const {\n      to,\n      label,\n      routePrefix,\n      route,\n      children\n    } = this.props\n\n    const toRoute = `${(routePrefix || '')}${to}`\n\n    const classes = classNames({\n      'menu-btn-active': route && route.pathname.startsWith(toRoute)\n    }, 'btn menu-btn')\n\n    const modChildren = React.Children.map(children, c => React.cloneElement(c, {\n      route,\n      routePrefix: toRoute\n    }))\n\n    return (\n      <Dropdown pullRight id=\"MenuBarDropdown\">\n        <Dropdown.Toggle noCaret className={classes}>\n          {label}\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"md dropdown-menu\">\n          {modChildren}\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n}\n\nMenuBarDropdown.propTypes = {\n  to: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  routePrefix: PropTypes.string,\n  route: PropTypes.object\n}\n\nexport default MenuBarDropdown\n"]}