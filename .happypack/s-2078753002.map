{"version":3,"sources":["src/components/MemberList/MemberList.jsx"],"names":["MemberList","props","state","selected","setSelected","bind","setSelectAll","imageFormat","select","rows","map","row","window","key","user_id","includes","indexOf","push","setState","cell","classes","thumb","members","options","sizePerPage","sizePerPageList","nextPage","prevPage","selectRow","mode","clickToSelect","onSelect","onSelectAll","className","propTypes","array","bool"],"mappings":"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","file":"MemberList.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport cx from 'classnames';\n\nimport './MemberList.scss';\n\nclass MemberList extends Component {\n  static propTypes = {\n    members: PropTypes.array,\n    select: PropTypes.bool\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: []\n    }\n\n    this.setSelected = this.setSelected.bind(this);\n    this.setSelectAll = this.setSelectAll.bind(this);\n    this.imageFormat = this.imageFormat.bind(this);\n  }\n  setSelectAll(select, rows) {\n    rows.map((row) => this.setSelected(row, select))\n  }\n  setSelected(row, select) {\n    if (typeof window === 'undefined') return true;\n    const key = row.user_id;\n    let selected = this.state.selected;\n    if (selected.includes(key) || select === false) {\n      delete selected[selected.indexOf(key)];\n    } else {\n      selected.push(key);\n    }\n    this.setState({\n      selected\n    });\n  }\n  imageFormat(cell, row) {\n    const selected = this.state.selected.includes(row.user_id);\n    const classes = cx({\n      'thumb32': true,\n      'selected': selected\n    });\n    return (<img src={cell.thumb} className={classes} role=\"presentation\" />);\n  }\n  render() {\n    const { selected } = this.state;\n    const { members, select } = this.props;\n\n    const options = {\n      sizePerPage: 25,\n      sizePerPageList: [25, 50, 100],\n      nextPage: 'Next',\n      prevPage: 'Prev'\n    }\n\n    const selectRow = select ? {\n      mode: 'checkbox',\n      selected,\n      clickToSelect: true,\n      onSelect: this.setSelected,\n      onSelectAll: this.setSelectAll,\n      className: 'selected',\n    } : { selected: [] };\n    return (\n      <BootstrapTable\n        options={options}\n        data={members}\n        striped\n        hover\n        pagination\n        selectRow={selectRow}\n        bordered={false}\n      >\n        <TableHeaderColumn hidden isKey dataField=\"user_id\" export={false} />\n        <TableHeaderColumn\n          export={false}\n          dataField=\"images\"\n          dataFormat={this.imageFormat}\n          columnClassName=\"photo\"\n        />\n        <TableHeaderColumn dataField=\"name\" dataSort>Name</TableHeaderColumn>\n        <TableHeaderColumn dataField=\"join_date\" dataSort>Date Joined</TableHeaderColumn>\n        <TableHeaderColumn dataField=\"email\" dataSort>Email</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}\nexport default MemberList;\n"]}