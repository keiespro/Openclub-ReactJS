'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouter = require('react-router');

var _reactRouterRedux = require('react-router-redux');

var _store = require('./store');

var _store2 = _interopRequireDefault(_store);

var _index = require('./routes/index');

var _index2 = _interopRequireDefault(_index);

var _AppContainer = require('./containers/AppContainer');

var _AppContainer2 = _interopRequireDefault(_AppContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = window.__INITIAL_STATE__;
var store = (0, _store2.default)(_reactRouter.browserHistory, initialState);
var history = (0, _reactRouterRedux.syncHistoryWithStore)(_reactRouter.browserHistory, store);
var routes = (0, _index2.default)(store);
var _Env = Env,
    __DEV__ = _Env.__DEV__;


var MOUNT_NODE = document.getElementById('root');
var App = _react2.default.createElement(_AppContainer2.default, { store: store, routes: (0, _index2.default)(store), history: history });

(0, _reactRouter.match)({ history: history, routes: routes }, function (error, redirectLocation, renderProps) {
  if (!__DEV__) {
    _reactDom2.default.render(_react2.default.createElement(_AppContainer2.default, (0, _extends3.default)({ store: store, routes: (0, _index2.default)(store), history: history }, renderProps, { client: true })), MOUNT_NODE);
  } else {
    var AC = require('react-hot-loader').AppContainer;

    var render = function render(Component) {
      _reactDom2.default.render(_react2.default.createElement(
        AC,
        null,
        _react2.default.createElement(Component, null)
      ), MOUNT_NODE);
    };

    if (module.hot) {
      module.hot.accept('./containers/AppContainer', function () {
        render(App);
      });
    }
  }
});