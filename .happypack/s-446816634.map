{"version":3,"sources":["src/components/Forms/FormContainer.jsx"],"names":["FormContainer","props","formValidation","validateField","bind","getState","handleChange","name","e","value","target","state","setState","clonedState","clone","set","validations","check","get","children","horizontal","inline","config","childContextTypes","func","isRequired","propTypes","object","array","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;;;;;AAAmD;;IAE7CA,a;;;AAaJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oJACXA,KADW;;AAGjB,UAAKC,cAAL,GAAsB,8BAAtB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,OAAhB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;AANiB;AAOlB;;;;iCACYG,I,EAAMC,C,EAAG;AACpB,UAAIC,QAAQD,CAAZ;AACA,UAAIA,EAAEE,MAAN,EAAc;AACZD,gBAAQD,EAAEE,MAAF,CAASD,KAAjB;AACD;AAJmB,mBAKQ,KAAKR,KALb;AAAA,UAKZU,KALY,UAKZA,KALY;AAAA,UAKLC,QALK,UAKLA,QALK;;AAMpB,UAAIC,cAAc,iBAAEC,KAAF,CAAQH,KAAR,CAAlB;AACA;AACAC,eAAS,iBAAEG,GAAF,CAAMF,WAAN,EAAmBN,IAAnB,EAAyBE,KAAzB,CAAT;AACD;;;kCACaF,I,EAAMS,W,EAAa;AAC/B,aAAO,KAAKd,cAAL,CAAoBe,KAApB,CAA0BV,IAA1B,EAAgCS,WAAhC,EAA6C,KAAKX,QAAL,CAAcE,IAAd,CAA7C,CAAP;AACD;;;6BACQA,I,EAAM;AAAA,UACLI,KADK,GACK,KAAKV,KADV,CACLU,KADK;;AAEb,aAAO,iBAAEO,GAAF,CAAMP,KAAN,EAAaJ,IAAb,CAAP;AACD;;;sCACiB;AAAA,UACRD,YADQ,GACkC,IADlC,CACRA,YADQ;AAAA,UACMD,QADN,GACkC,IADlC,CACMA,QADN;AAAA,UACgBF,aADhB,GACkC,IADlC,CACgBA,aADhB;;AAEhB,aAAO;AACLG,kCADK;AAELD,0BAFK;AAGLF;AAHK,OAAP;AAKD;;;6BACQ;AAAA,oBACkC,KAAKF,KADvC;AAAA,UACCkB,QADD,WACCA,QADD;AAAA,UACWC,UADX,WACWA,UADX;AAAA,UACuBC,MADvB,WACuBA,MADvB;;AAEP,UAAMC,SAAS;AACbF,8BADa;AAEbC;AAFa,OAAf;;AAKA,aAAQ;AAAA;AAAUC,cAAV;AAAmBH;AAAnB,OAAR;AACD;;;;;AAtDGnB,a,CACGuB,iB,GAAoB;AACzBjB,gBAAc,iBAAUkB,IAAV,CAAeC,UADJ;AAEzBpB,YAAU,iBAAUmB,IAAV,CAAeC,UAFA;AAGzBtB,iBAAe,iBAAUqB,IAAV,CAAeC;AAHL,C;AADvBzB,a,CAMG0B,S,GAAY;AACjBd,YAAU,iBAAUY,IAAV,CAAeC,UADR;AAEjBd,SAAO,iBAAUgB,MAAV,CAAiBF,UAFP;AAGjBN,YAAU,iBAAUS,KAAV,CAAgBH,UAHT;AAIjBL,cAAY,iBAAUS,IAJL;AAKjBR,UAAQ,iBAAUQ;AALD,C;kBAkDN7B,a","file":"FormContainer.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Form } from 'react-bootstrap';\nimport _ from 'lodash';\n\nimport formValidation from 'utils/formValidation'; //eslint-disable-line\n\nclass FormContainer extends Component {\n  static childContextTypes = {\n    handleChange: PropTypes.func.isRequired,\n    getState: PropTypes.func.isRequired,\n    validateField: PropTypes.func.isRequired\n  }\n  static propTypes = {\n    setState: PropTypes.func.isRequired,\n    state: PropTypes.object.isRequired,\n    children: PropTypes.array.isRequired,\n    horizontal: PropTypes.bool,\n    inline: PropTypes.bool\n  }\n  constructor(props) {\n    super(props);\n\n    this.formValidation = new formValidation();\n    this.validateField = this.validateField.bind(this);\n    this.getState = this.getState.bind(this);\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(name, e) {\n    let value = e;\n    if (e.target) {\n      value = e.target.value;\n    }\n    const { state, setState } = this.props;\n    let clonedState = _.clone(state);\n    // clonedState.validations = this.formValidation.checkAll();\n    setState(_.set(clonedState, name, value));\n  }\n  validateField(name, validations) {\n    return this.formValidation.check(name, validations, this.getState(name));\n  }\n  getState(name) {\n    const { state } = this.props;\n    return _.get(state, name);\n  }\n  getChildContext() {\n    const { handleChange, getState, validateField } = this;\n    return {\n      handleChange,\n      getState,\n      validateField\n    };\n  }\n  render() {\n    const { children, horizontal, inline } = this.props;\n    const config = {\n      horizontal,\n      inline\n    };\n\n    return (<Form {...config}>{children}</Form>)\n  }\n}\nexport default FormContainer;\n"]}