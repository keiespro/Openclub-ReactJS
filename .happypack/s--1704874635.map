{"version":3,"sources":["src/layouts/CoreLayout/CoreLayout.jsx"],"names":["authActions","CoreLayout","data","children","location","logoutUser","user","containerClasses","contentClasses","full","PropTypes","element","isRequired","object","func","defaultProps","currentViewer","CoreLayoutWithApollo","skip","ownProps","token","state","auth"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;IAAYA,W;;AAEZ;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,aAAa,SAAbA,UAAa,OAAmD;AAAA,uBAAhDC,IAAgD;AAAA,MAAhDA,IAAgD,6BAAzC,EAAyC;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACpE,MAAMC,OAAOJ,KAAKI,IAAlB;AACA,MAAMC,mBAAmB,0BAAW,kBAAX,EAA+B;AACtD,yBAAqB,CAACD,IADgC;AAEtD,iBAAa,CAACA;AAFwC,GAA/B,CAAzB;AAIA,MAAME,iBAAiB,0BAAW,gBAAX,EAA6B;AAClDC,UAAM,CAACH;AAD2C,GAA7B,CAAvB;;AAIA,SACE;AAAA;AAAA,MAAK,WAAWC,gBAAhB;AACE,sDAAQ,MAAMD,IAAd,GADF;AAEIA,YAAQ,mDAAS,MAAMA,IAAf,EAAqB,UAAUF,QAA/B,GAFZ;AAGIE,YAAQ,uCAAK,WAAU,2BAAf,GAHZ;AAKE;AAAA;AAAA,QAAK,WAAWE,cAAhB;AACGL;AADH;AALF,GADF;AAWD,CArBD;;AAuBAF,WAAWS,SAAX,GAAuB;AACrBP,YAAU,iBAAUQ,OAAV,CAAkBC,UADP;AAErBV,QAAM,iBAAUW,MAFK;AAGrBR,cAAY,iBAAUS;AAHD,CAAvB;;AAMAb,WAAWc,YAAX,GAA0B;AACxBb,QAAM;AADkB,CAA1B;;AAIA,IAAMc,0DAAN;;AAsBA;AACA,IAAMC,uBAAuB,0BAAQD,aAAR,EAAuB;AAClDE,QAAM,wBAAY;AAChB,WAAO,CAACC,SAASC,KAAjB;AACD;AAHiD,CAAvB,EAI1BnB,UAJ0B,CAA7B;;AAMA;kBACe,yBAAQ;AAAA,SAAU;AAC/BmB,WAAOC,MAAMC,IAAN,CAAWF;AADa,GAAV;AAAA,CAAR,6BAENpB,WAFM,GAESiB,oBAFT,C;QAKbhB,U,GAAAA,U","file":"CoreLayout.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport classNames from 'classnames'\nimport * as authActions from 'modules/auth/actions'\n\nimport Header from '../../components/Header'\nimport Sidebar from '../../components/Sidebar'\nimport './styles'\n\nconst CoreLayout = ({ data = {}, children, location, logoutUser }) => {\n  const user = data.user\n  const containerClasses = classNames('layout-container', {\n    'sidebar-offcanvas': !user,\n    'loggedout': !user\n  })\n  const contentClasses = classNames('main-container', {\n    full: !user\n  })\n\n  return (\n    <div className={containerClasses}>\n      <Header user={user} />\n      { user && <Sidebar user={user} location={location} /> }\n      { user && <div className=\"sidebar-layout-obfuscator\" /> }\n\n      <div className={contentClasses}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nCoreLayout.PropTypes = {\n  children: PropTypes.element.isRequired,\n  data: PropTypes.object,\n  logoutUser: PropTypes.func\n}\n\nCoreLayout.defaultProps = {\n  data: {}\n}\n\nconst currentViewer = gql`\n  query currentViewer {\n    user {\n      _id\n      email\n      name\n      images {\n        thumb\n        square\n      }\n      clubs {\n        _id\n        slug\n        name\n        images {\n          thumb\n        }\n      }\n    }\n  }\n`\n\n// connect to apollo\nconst CoreLayoutWithApollo = graphql(currentViewer, {\n  skip: ownProps => {\n    return !ownProps.token\n  }\n})(CoreLayout)\n\n// connect to redux\nexport default connect(state => ({\n  token: state.auth.token\n}), { ...authActions })(CoreLayoutWithApollo)\n\nexport {\n  CoreLayout\n}\n"]}