{"version":3,"sources":["src/modules/auth/actions.js"],"names":["inlineLogin","login","checkAuthentication","logoutUser","SHOW_INLINE_LOCK","SHOW_LOCK","LOCK_SUCCESS","LOCK_ERROR","showInlineLock","type","showLock","lockSuccess","token","lockError","err","LOGOUT_REQUEST","requestLogout","id","dispatch","console","log","show","authMutation","then","accessToken","mutate","mutation","variables","data","signin","localStorage","setItem","catch","error","removeItem","resetStore","replace"],"mappings":";;;;;;;;;;;;;QA8CgBA,W,GAAAA,W;QASAC,K,GAAAA,K;QAgBAC,mB,GAAAA,mB;QAkBAC,U,GAAAA,U;;AAzFhB;;;;AACA;;;;AACA;;AACA;;;;AAEA;AACO,IAAMC,8CAAmB,kBAAzB;AACA,IAAMC,gCAAY,WAAlB;AACA,IAAMC,sCAAe,cAArB;AACA,IAAMC,kCAAa,YAAnB;;AAEP,SAASC,cAAT,GAA0B;AACxB,SAAO;AACLC,UAAML;AADD,GAAP;AAGD;;AAED,SAASM,QAAT,GAAoB;AAClB,SAAO;AACLD,UAAMJ;AADD,GAAP;AAGD;;AAED,SAASM,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO;AACLH,UAAMH,YADD;AAELM;AAFK,GAAP;AAID;;AAED,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAO;AACLL,UAAMF,UADD;AAELO;AAFK,GAAP;AAID;;AAED;AACO,IAAMC,0CAAiB,gBAAvB;;AAEP,SAASC,aAAT,GAAyB;AACvB,SAAO;AACLP,UAAMM;AADD,GAAP;AAGD;;AAEM,SAASf,WAAT,CAAqBiB,EAArB,EAAyB;AAC9B,SAAO,oBAAY;AACjBC,aAASV,gBAAT;AACAW,YAAQC,GAAR,CAAY,aAAZ,EAA2BH,EAA3B;AACA,0BAAWA,EAAX,EAAeI,IAAf;AACD,GAJD;AAKD;;AAED;AACO,SAASpB,KAAT,GAAiB;AACtB,SAAO,oBAAY;AACjBiB,aAASR,UAAT;AACA,eAAKW,IAAL;AACD,GAHD;AAID;;AAED,IAAMC,yDAAN;;AAQA;AACO,SAASpB,mBAAT,GAA+B;AACpC,SAAO;AAAA,WAAY,iBAAWqB,IAAX,CAAgB,uBAAe;AAChD,UAAIC,WAAJ,EAAiB;AACf,eAAO,iBAAaC,MAAb,CAAoB;AACzBC,oBAAUJ,YADe;AAEzBK,qBAAW,EAAEH,wBAAF;AAFc,SAApB,EAGJD,IAHI,CAGC,gBAAc;AAAA,cAAXK,IAAW,QAAXA,IAAW;AAAA,cACZhB,KADY,GACFgB,KAAKC,MADH,CACZjB,KADY;;AAEpBkB,uBAAaC,OAAb,CAAqB,gBAArB,EAAuCnB,KAAvC;AACAM,mBAASP,YAAYC,KAAZ,CAAT;AACD,SAPM,EAOJoB,KAPI,CAOE,iBAAS;AAChBd,mBAASL,UAAUoB,KAAV,CAAT;AACD,SATM,CAAP;AAUD;AACF,KAbkB,CAAZ;AAAA,GAAP;AAcD;;AAED;AACO,SAAS9B,UAAT,GAAsB;AAC3B,SAAO,oBAAY;AACjBe,aAASF,eAAT;AACAc,iBAAaI,UAAb,CAAwB,gBAAxB;AACA;AACA,qBAAaC,UAAb;AACA,gCAAeC,OAAf,CAAuB,GAAvB;AACD,GAND;AAOD","file":"actions.js","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import apolloClient from 'modules/apollo'\nimport gql from 'graphql-tag'\nimport { browserHistory } from 'react-router'\nimport { lock, inlineLock, hashParsed } from '../../utils/Auth0'\n\n// Auth0 lock actions\nexport const SHOW_INLINE_LOCK = 'SHOW_INLINE_LOCK'\nexport const SHOW_LOCK = 'SHOW_LOCK'\nexport const LOCK_SUCCESS = 'LOCK_SUCCESS'\nexport const LOCK_ERROR = 'LOCK_ERROR'\n\nfunction showInlineLock() {\n  return {\n    type: SHOW_INLINE_LOCK\n  }\n}\n\nfunction showLock() {\n  return {\n    type: SHOW_LOCK\n  }\n}\n\nfunction lockSuccess(token) {\n  return {\n    type: LOCK_SUCCESS,\n    token\n  }\n}\n\nfunction lockError(err) {\n  return {\n    type: LOCK_ERROR,\n    err\n  }\n}\n\n// single logout action due to jwt (keep as request in case we add complexity)\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST'\n\nfunction requestLogout() {\n  return {\n    type: LOGOUT_REQUEST\n  }\n}\n\nexport function inlineLogin(id) {\n  return dispatch => {\n    dispatch(showInlineLock())\n    console.log('inlineLogin', id);\n    inlineLock(id).show()\n  }\n}\n\n// Opens the Lock widget and dispatches actions along the way\nexport function login() {\n  return dispatch => {\n    dispatch(showLock())\n    lock.show()\n  }\n}\n\nconst authMutation = gql`\n  mutation signin($accessToken: ID!) {\n    signin(access_token: $accessToken) {\n      token\n    }\n  }\n`\n\n// checks current authentication status of the lock\nexport function checkAuthentication() {\n  return dispatch => hashParsed.then(accessToken => {\n    if (accessToken) {\n      return apolloClient.mutate({\n        mutation: authMutation,\n        variables: { accessToken }\n      }).then(({ data }) => {\n        const { token } = data.signin\n        localStorage.setItem('openclub_token', token)\n        dispatch(lockSuccess(token))\n      }).catch(error => {\n        dispatch(lockError(error))\n      })\n    }\n  })\n}\n\n// Logs the user out\nexport function logoutUser() {\n  return dispatch => {\n    dispatch(requestLogout())\n    localStorage.removeItem('openclub_token')\n    // clear apollos cache\n    apolloClient.resetStore()\n    browserHistory.replace('/')\n  }\n}\n"]}