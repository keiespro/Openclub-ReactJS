{"version":3,"sources":["src/routes/Events/components/create_event.jsx"],"names":["CreateEvent","mutate","createTheEvent","console","log","values","variables","then","data","push","slug","catch","err","clubs","propTypes","func","isRequired","createMutation","clubList","CreateEventWithApollo"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;;AAElC,MAAMC,iBAAiB,SAAjBA,cAAiB,SAAU;AAC/BC,YAAQC,GAAR,CAAYC,MAAZ;AACAJ,WAAO;AACLK,iBAAWD;AADN,KAAP,EAEGE,IAFH,CAEQ,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;;AACpB,kCAAeC,IAAf,aAA8BJ,OAAOK,IAArC;AACD,KAJD,EAIGC,KAJH,CAIS,eAAO;AACdR,cAAQC,GAAR,CAAY,sBAAZ;AACAD,cAAQC,GAAR,CAAYQ,GAAZ;AACD,KAPD;AAQD,GAVD;;AAYA,MAAMC,QAAQ,EAAd;;AAEA,SACE;AAAA;AAAA,MAAK,WAAU,MAAf;AACE;AAAA;AAAA,QAAK,WAAU,WAAf;AACE,8DAAY,OAAM,cAAlB,GADF;AAEE,mEAAiB,OAAOA,KAAxB,EAA+B,UAAUX,cAAzC;AAFF;AADF,GADF;AAQD,CAxBD;;AA0BAF,YAAYc,SAAZ,GAAwB;AACtBb,UAAQ,iBAAUc,IAAV,CAAeC;AADD,CAAxB;;AAIA,IAAMC,2DAAN;;AASA,IAAMC,sDAAN;;AAeA,IAAMC,wBAAwB,0BAAQD,QAAR,EAAkB,0BAAQD,cAAR,EAAwBjB,WAAxB,CAAlB,CAA9B;;kBAEemB,qB","file":"create_event.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { PageHeader } from 'layouts/PageLayout'\nimport { browserHistory } from 'react-router'\nimport CreateEventForm from './create_event_form'\n\nconst CreateEvent = ({ mutate }) => {\n\n  const createTheEvent = values => {\n    console.log(values)\n    mutate({\n      variables: values\n    }).then(({ data }) => {\n      browserHistory.push(`/event/${values.slug}`)\n    }).catch(err => {\n      console.log('Error creating event')\n      console.log(err)\n    })\n  }\n\n  const clubs = []\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <PageHeader title=\"Create Event\"></PageHeader>\n        <CreateEventForm clubs={clubs} onSubmit={createTheEvent}/>\n      </div>\n    </div>\n  )\n}\n\nCreateEvent.propTypes = {\n  mutate: PropTypes.func.isRequired\n}\n\nconst createMutation = gql`\n  mutation createEvent($slug: String!, $hosting_club_id: MongoID!, $event: eventInput!){\n    createEvent(slug: $slug, hosting_club_id: $hosting_club_id, event: $event){\n      _id\n      slug\n    }\n  }\n`\n\nconst clubList = gql`\n  query currentViewer {\n    user {\n      clubs {\n        _id\n        slug\n        name\n        images {\n          thumb\n        }\n      }\n    }\n  }\n`\n\nconst CreateEventWithApollo = graphql(clubList)(graphql(createMutation)(CreateEvent))\n\nexport default CreateEventWithApollo\n"]}