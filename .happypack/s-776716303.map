{"version":3,"sources":["src/utils/formValidation/index.js"],"names":["formValidation","inputs","value","validation","maxTest","match","minTest","conditions","name","type","message","length","expression","test","assign","validations","indexOf","Array","Error","map","e","input","check","document","body","scrollTop","getElementById","getBoundingClientRect"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,c;AACJ,4BAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;;;;yBACIC,K,EAAOC,U,EAAY;AACtB,UAAMC,UAAUD,WAAWE,KAAX,CAAiB,YAAjB,CAAhB;AACA,UAAMC,UAAUH,WAAWE,KAAX,CAAiB,YAAjB,CAAhB;;AAEA,UAAID,OAAJ,EAAa;AACX,YAAMG,aAAa;AACjBC,oBADiB;AAEjBC,gBAAM,OAFW;AAGjBC,oDAAwCN,QAAQ,CAAR,CAAxC;AAHiB,SAAnB;AAKA,eAAOF,MAAMS,MAAN,GAAeP,QAAQ,CAAR,CAAf,GAA4BG,UAA5B,GAAyC,KAAhD;AACD;AACD,UAAID,OAAJ,EAAa;AACX,YAAMC,cAAa;AACjBC,oBADiB;AAEjBC,gBAAM,OAFW;AAGjBC,qDAAyCJ,QAAQ,CAAR,CAAzC;AAHiB,SAAnB;AAKA,eAAOJ,MAAMS,MAAN,GAAeL,QAAQ,CAAR,CAAf,GAA4BC,WAA5B,GAAyC,KAAhD;AACD;AACD,aAAO,sBAAYJ,UAAZ,EAAwBS,UAAxB,CAAmCC,IAAnC,CAAwCX,KAAxC,MAAmD,KAAnD,GAA2D,iBAAEY,MAAF,CAAS,sBAAYX,UAAZ,CAAT,EAAkC,EAAEK,UAAF,EAAlC,CAA3D,GAAyG,KAAhH;AACD;;;0BACKA,I,EAAMO,W,EAAab,K,EAAO;AAAA;;AAC9B,UAAIa,YAAYC,OAAZ,CAAoB,OAApB,IAA+B,CAAC,CAAhC,IAAqCd,UAAU,EAAnD,EAAuD;AACrD,eAAO,KAAP;AACD;AACD,UAAIa,uBAAuBE,KAAvB,KAAiC,KAArC,EAA4C;AAC1C,cAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;AACD,WAAKjB,MAAL,CAAYO,IAAZ,IAAoB;AAClBO,gCADkB;AAElBb;AAFkB,OAApB;AAIA,UAAI;AACFa,oBAAYI,GAAZ,CAAgB,UAAChB,UAAD,EAAgB;AAC9B,cAAMU,OAAO,MAAKA,IAAL,CAAUX,KAAV,EAAiBC,UAAjB,CAAb;AACA,cAAIU,IAAJ,EAAU;AACR,kBAAMA,IAAN;AACD;AACD,iBAAO,KAAP;AACD,SAND;AAOA,eAAO,KAAP;AACD,OATD,CASE,OAAOO,CAAP,EAAU;AACV,eAAOA,CAAP;AACD;AACF;;;+BACU;AAAA;;AACT,UAAI;AACF,4BAAY,KAAKnB,MAAjB,EAAyBkB,GAAzB,CAA6B,UAACjB,KAAD,EAAW;AACtC,cAAMmB,QAAQ,OAAKpB,MAAL,CAAYC,KAAZ,CAAd;AACA,cAAIW,OAAO,OAAKS,KAAL,CAAWpB,KAAX,EAAkBmB,MAAMN,WAAxB,EAAqCM,MAAMnB,KAA3C,CAAX;AACA,cAAIW,IAAJ,EAAU;AACR,kBAAMA,IAAN;AACD;AACD,iBAAO,KAAP;AACD,SAPD;AAQA,eAAO,KAAP;AACD,OAVD,CAUE,OAAOO,CAAP,EAAU;AACVG,iBAASC,IAAT,CAAcC,SAAd,GAA0BF,SAASG,cAAT,kBAAuCN,EAAEZ,IAAzC,EAAiDmB,qBAAjD,KAA2EJ,SAASC,IAAT,CAAcC,SAAnH;AACA,eAAOL,CAAP;AACD;AACF;;;;;kBAEYpB,c","file":"index.js","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import definitions from './definitions';\nimport _ from 'lodash';\n\nclass formValidation {\n  constructor() {\n    this.inputs = {};\n  }\n  test(value, validation) {\n    const maxTest = validation.match(/max([\\d]+)/);\n    const minTest = validation.match(/min([\\d]+)/);\n\n    if (maxTest) {\n      const conditions = {\n        name,\n        type: 'error',\n        message: `The input must be less than ${maxTest[1]} characters.`\n      }\n      return value.length > maxTest[1] ? conditions : false;\n    }\n    if (minTest) {\n      const conditions = {\n        name,\n        type: 'error',\n        message: `This input must be more than ${minTest[1]} characters.`\n      }\n      return value.length < minTest[1] ? conditions : false;\n    }\n    return definitions[validation].expression.test(value) === false ? _.assign(definitions[validation], { name }) : false;\n  }\n  check(name, validations, value) {\n    if (validations.indexOf('blank') > -1 && value === '') {\n      return false;\n    }\n    if (validations instanceof Array === false) {\n      throw new Error(\"Validations must be an array.\")\n    }\n    this.inputs[name] = {\n      validations,\n      value\n    };\n    try {\n      validations.map((validation) => {\n        const test = this.test(value, validation);\n        if (test) {\n          throw test;\n        }\n        return false;\n      });\n      return false;\n    } catch (e) {\n      return e;\n    }\n  }\n  checkAll() {\n    try {\n      Object.keys(this.inputs).map((value) => {\n        const input = this.inputs[value];\n        let test = this.check(value, input.validations, input.value);\n        if (test) {\n          throw test;\n        }\n        return false;\n      });\n      return false;\n    } catch (e) {\n      document.body.scrollTop = document.getElementById(`formcontrol-${e.name}`).getBoundingClientRect() + document.body.scrollTop\n      return e;\n    }\n  }\n}\nexport default formValidation;\n"]}