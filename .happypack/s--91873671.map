{"version":3,"sources":["src/routes/Club/routes/Admin/routes/Settings/components/Financial.jsx"],"names":["Financial","props","tax","state","club","type","entity_name","entity_number","entity_number_type","taxes","name","value","toggleSelect","bind","radioChange","e","preventDefault","setState","select","field","change","target","newState","setClubState","assign","key","push","map","deleteTax","input","addTax","propTypes","params","object"],"mappings":"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","file":"Financial.jsx","sourceRoot":"/Volumes/Git HD/Code/openclub","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport { Row, Col } from 'react-bootstrap'\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, FieldSet, Input, Radio, Switch } from 'components/Forms';\nimport _ from 'lodash';\n\nimport Debug from 'utils/componentDebug';\n\nclass Financial extends Component {\n  static propTypes = {\n    params: PropTypes.object\n  }\n  constructor(props) {\n    super(props);\n\n    this.tax = {};\n\n    this.state = {\n      club: {\n        type: 'registered',\n        entity_name: 'BMW Club Queensland Incorporated',\n        entity_number: '31 016 074 144',\n        entity_number_type: 'abn',\n        taxes: [\n          {\n            name: 'GST',\n            type: 'inclusive',\n            value: '10'\n          }\n        ]\n      }\n    }\n\n    this.toggleSelect = this.toggleSelect.bind(this);\n    this.radioChange = this.radioChange.bind(this);\n  }\n  toggleSelect(e) {\n    e.preventDefault();\n    this.setState({\n      select: this.state.select === false\n    });\n  }\n  changeInput(field, e) {\n    let change = {};\n    change[field] = e.target.value;\n    this.setState(change);\n  }\n  radioChange(e) {\n    let newState = this.state.club;\n    newState[e.target.name] = e.target.value;\n    this.setClubState(newState);\n  }\n  setClubState(state) {\n    this.setState({club: _.assign(this.state.club, state)});\n  }\n  deleteTax(key) {\n    let newState = this.state.club;\n    delete newState.taxes[key];\n    this.setClubState(newState);\n  }\n  addTax(e) {\n    e.preventDefault();\n    let newState = this.state.club;\n    newState.taxes.push({\n      name: this.tax.name.value,\n      type: this.tax.type.value,\n      value: this.tax.value.value\n    });\n    this.setClubState(newState);\n  }\n  render() {\n    return (\n      <Row>\n        <Debug component={this} />\n        <Col xs={12}>\n          { /* Club Details */}\n          <div className=\"card\">\n            <div className=\"card-item\">\n              <img src=\"/img/banners/finance.png\" alt=\"Finance background\" className=\"fw img-responsive\" />\n              <div className=\"col-xs-8 card-item-text bg-transparent\">\n                <h3 className=\"pl-lg text-primary\">\n                  Financial details\n                  <br />\n                  <small className=\"ml0\">\n                    Setup your club for online payments and tax.\n                  </small>\n                </h3>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <Form state={this.state.club} setState={this.setClubState.bind(this)} horizontal>\n                <h5>\n                  Club legal type\n                  <br />\n                  <small className=\"m0\">\n                    {\"Depending on the type of club you operate, we have different setup options.\"}\n                  </small>\n                </h5>\n                <FieldSet>\n                  <FormGroup controlId=\"name\">\n                    <div>\n                      <Radio name=\"type\" value=\"none\" onChange={this.radioChange} checked={this.state.club.type === 'none'}>\n                        <i className=\"fa fa-ban\" /> Off\n                        <br />\n                        <span className=\"help-block ml-lg\">{\"The club isn't setup for payments.\"}</span>\n                      </Radio>\n                    </div>\n                    <div>\n                      <Radio name=\"type\" value=\"registered\" onChange={this.radioChange} checked={this.state.club.type === 'registered'}>\n                        <i className=\"fa fa-building\" /> Registered\n                        <br />\n                        <span className=\"help-block ml-lg\">The club has a registered business or trades through an entity.</span>\n                      </Radio>\n                    </div>\n                    <div>\n                      <Radio name=\"type\" value=\"private\" onChange={this.radioChange} checked={this.state.club.type === 'private'}>\n                        <i className=\"fa fa-user\" /> individual\n                        <br />\n                        <span className=\"help-block ml-lg\">The club is for private use with an individual receiving payments.</span>\n                      </Radio>\n                    </div>\n                  </FormGroup>\n                </FieldSet>\n                <div className={this.state.club.type === 'registered' ? '' : 'hidden'}>\n                  <h5>\n                    Legal name and business number\n                    <br />\n                    <small className=\"m0\">\n                      {\"Provide your club legal name and business number. This is not required if you are an individual.\"}\n                    </small>\n                  </h5>\n                  <FieldSet>\n                    <Input validations={['max1000']} name=\"entity_name\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Entity Name</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>Name of the entity that will be accepting payments (ie. Your Club Pty Ltd).</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                  <FieldSet>\n                    <Input name=\"entity_number_type\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Number type</ControlLabel>\n                      <FormControl componentClass=\"select\" containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\">\n                        <option value=\"blank\">-</option>\n                        <option value=\"abn\">Australian Business Number</option>\n                        <option value=\"nzbn\">New Zealand Business Number</option>\n                        <option value=\"vat\">VAT identification number</option>\n                      </FormControl>\n                      <HelpBlock>{\"Enter the type of number that you've provided.\"}</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                  <FieldSet>\n                    <Input validations={[`${this.state.club.entity_number_type}`]} name=\"entity_number\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Entity number</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>If you have a business number or tax ID that your entity uses, please enter it.</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                </div>\n                <div className={this.state.club.type === 'private' ? '' : 'hidden'}>\n                  <h5>\n                    Individual details\n                    <br />\n                    <small className=\"m0\">\n                      {\"We just need the name of the person taking payments.\"}\n                    </small>\n                  </h5>\n                  <FieldSet>\n                    <Input validations={['max1000']} name=\"entity_name\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Individual Name</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>Enter the full name of the person who will be taking payments.</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                </div>\n                <div className={this.state.club.type !== 'blank' ? '' : 'hidden'}>\n                  <h5>\n                    Taxes\n                    <br />\n                    <small className=\"m0\">\n                      {\"If you're required to charge or display taxes, we can add these to invoices and receipts made within OpenClub.\"}\n                    </small>\n                  </h5>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                      <thead>\n                        <tr>\n                          <th>Tax name</th>\n                          <th>Type</th>\n                          <th>Value</th>\n                          <th>Options</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.club.taxes.map((value, key) => (\n                          <tr key={`tax${key}`}>\n                            <td>{value.name}</td>\n                            <td>{value.type}</td>\n                            <td>{value.value}%</td>\n                            <td><button className=\"btn btn-danger\" onClick={this.deleteTax.bind(this, key)}><i className=\"fa fa-trash\" /></button></td>\n                          </tr>\n                        ))}\n                        <tr>\n                          <td>\n                            <FormControl type=\"text\" name=\"name\" reg={(input) => { this.tax.name = input }}/>\n                          </td>\n                          <td>\n                            <FormControl componentClass=\"select\" type=\"select\" name=\"type\" reg={(input) => { this.tax.type = input }}>\n                              <option value=\"inclusive\">Inclusive</option>\n                              <option value=\"exclusive\">Exclusive</option>\n                            </FormControl>\n                          </td>\n                          <td>\n                            <FormControl type=\"number\" name=\"value\" reg={(input) => { this.tax.value = input }}/>\n                          </td>\n                          <td>\n                            <button className=\"btn btn-success\" onClick={this.addTax.bind(this)}><i className=\"fa fa-plus\" /></button>\n                          </td>\n\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  <h5>\n                    Bank account\n                    <br />\n                    <small className=\"m0\">\n                      {\"Nominate a bank account for OpenClub to deposit funds into.\"}\n                    </small>\n                  </h5>\n                  <FieldSet>\n                    <Input validations={['name']} name=\"bank.account_holder_name\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Account Name</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>Enter the name for the bank account.</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                  <FieldSet>\n                    <Input validations={['name']} name=\"bank.account_holder_type\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Account Type</ControlLabel>\n                      <FormControl componentClass=\"select\" containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"select\">\n                        <option value=\"\">-</option>\n                        <option value=\"individual\">Individual</option>\n                        <option value=\"company\">Business</option>\n                      </FormControl>\n                      <HelpBlock>Enter the type of bank account.</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                  <FieldSet>\n                    <Input validations={['number']} name=\"bank.account_number\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">Account Number</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>Enter the bank account number.</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                  <FieldSet>\n                    <Input validations={['number']} name=\"bank.routing_number\">\n                      <ControlLabel className=\"col-xs-12 col-md-2\">BSB / Routing Number</ControlLabel>\n                      <FormControl containerClassName=\"col-xs-12 col-md-6\" className=\"input-lg\" type=\"text\" />\n                      <HelpBlock>Enter your BSB or account routing number (for international bank accounts).</HelpBlock>\n                    </Input>\n                  </FieldSet>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Financial\n"]}